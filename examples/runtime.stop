start A {
    string test1
    -> B
}

start Z {
    -> Y
}

GetDynamicText <- string {
    string test2
    string layout <- GetLayout
}

GetLayout <- string {

}

Configuration {
    string host
}

GetConfiguration <- Configuration {

}

GetDownloadURL <- string {
    string filename
    Configuration configuration <- GetConfiguration
}

Post {
    enum Status {
        DRAFT
        PUBLISHED
    }
    string title
    optional Status status
    optional string filename
    optional string url <- GetDownloadURL
}

async GetPosts <- [Post] throws DatabaseError {
    timeout 10 -> GetPostsTimeoutError
}

async GetTimedOutPosts <- [Post] throws DatabaseError {
    timeout 1 -> GetTimedOutPostsError
}

async GetFilteredPosts <- [Post] throws DatabaseError {
    string filter
    timeout 10 -> GetFilteredPostsTimeoutError
}

stop DatabaseError {

}

stop GetPostsTimeoutError {
    GetPosts timedOutState
}

stop GetFilteredPostsTimeoutError {
    GetFilteredPosts timedOutState
}

stop GetTimedOutPostsError {
}

B {
    string test2
    string dynamicText <- GetDynamicText
    [Post] posts <- GetPosts
    optional string query
    optional [Post] filteredPosts <- GetFilteredPosts(filter: query)
    -> C
}

Y {
    [Post] posts <- GetTimedOutPosts
    -> C
}

stop C {
    string test3
}

Iso {

}